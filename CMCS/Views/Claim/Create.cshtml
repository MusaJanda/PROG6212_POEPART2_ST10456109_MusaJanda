@model CMCS.ViewModels.CreateClaimViewModel

@{
    ViewData["Title"] = "Create Claim";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0"><i class="bi bi-plus-circle"></i> Create New Claim</h2>
        </div>
        <div class="card-body">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <h5>Please fix the following errors:</h5>
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }

            <form asp-action="Create" method="post" enctype="multipart/form-data" id="claimForm">
                @Html.AntiForgeryToken()

                <!-- Claim Date -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="ClaimDate" class="form-label fw-bold">Claim Date *</label>
                            <input asp-for="ClaimDate"
                                   class="form-control"
                                   type="date"
                                   required
                                   max="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   style="padding: 0.75rem; font-size: 1rem;" />
                            <span asp-validation-for="ClaimDate" class="text-danger small"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="HoursWorked" class="form-label fw-bold">Hours Worked *</label>
                            <input asp-for="HoursWorked" class="form-control" min="0.5" max="200" step="0.5" required
                                   oninput="calculateTotal()" />
                            <span asp-validation-for="HoursWorked" class="text-danger small"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="HourlyRate" class="form-label fw-bold">Hourly Rate (R) *</label>
                            <input asp-for="HourlyRate" class="form-control" type="number" step="0.01" min="0" max="1000" required
                                   oninput="calculateTotal()" />
                            <span asp-validation-for="HourlyRate" class="text-danger small"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label fw-bold">Total Amount</label>
                            <input type="text" class="form-control" id="totalAmount" readonly value="R 0.00"
                                   style="background-color: #f8f9fa; font-weight: bold;" />
                            <small class="form-text text-muted">Calculated: Hours × Rate</small>
                        </div>
                    </div>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Description" class="form-label fw-bold">Description *</label>
                    <textarea asp-for="Description" class="form-control" rows="4"
                              placeholder="Describe the work performed, modules taught, or activities completed..."
                              required></textarea>
                    <span asp-validation-for="Description" class="text-danger small"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Department" class="form-label fw-bold">Department *</label>
                    <textarea asp-for="Department" class="form-control" rows="4"
                              required></textarea>
                    <span asp-validation-for="Department" class="text-danger small"></span>
                </div>

                <!-- File Upload Section -->
                <div class="form-group mb-4">
                    <label class="form-label fw-bold">Supporting Documents (Optional)</label>
                    <div class="border rounded p-3 bg-light">
                        <div class="mb-3">
                            <input type="file" class="form-control" id="documents" name="documents" multiple
                                   accept=".pdf,.docx,.xlsx,.jpg,.jpeg,.png" />
                            <div class="form-text">
                                <i class="bi bi-info-circle"></i>
                                Maximum file size: 10MB per file. Allowed types: PDF, Word, Excel, Images
                            </div>
                        </div>

                        <div id="fileList" class="mt-2">
                            <small class="text-muted">No files selected</small>
                        </div>
                    </div>
                </div>

                <!-- Submit Buttons -->
                <div class="form-group">
                    <button type="submit" class="btn btn-success btn-lg me-2" id="submitBtn">
                        <i class="bi bi-check-circle"></i> Submit Claim
                    </button>
                    <a asp-action="Index" asp-controller="Dashboard" class="btn btn-secondary btn-lg">
                        <i class="bi bi-arrow-left"></i> Back to Dashboard
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function calculateTotal() {
            const hours = parseFloat(document.querySelector('#HoursWorked').value) || 0;
            const rate = parseFloat(document.querySelector('#HourlyRate').value) || 0;
            const total = hours * rate;
            document.querySelector('#totalAmount').value = 'R ' + total.toFixed(2);
        }

        document.addEventListener('DOMContentLoaded', function() {
            calculateTotal();

            // Set today's date as default if empty
            const dateInput = document.querySelector('#ClaimDate');
            if (!dateInput.value) {
                const today = new Date().toISOString().split('T')[0];
                dateInput.value = today;
            }
        });

        // File display logic
        document.getElementById('documents').addEventListener('change', function() {
            const fileList = document.getElementById('fileList');
            if (this.files.length > 0) {
                let html = '<div class="selected-files"><strong>Selected files:</strong><ul class="mt-2 mb-0">';
                for (let i = 0; i < this.files.length; i++) {
                    html += `<li><i class="bi bi-file-earmark"></i> ${this.files[i].name} (${formatFileSize(this.files[i].size)})</li>`;
                }
                html += '</ul></div>';
                fileList.innerHTML = html;
            } else {
                fileList.innerHTML = '<small class="text-muted">No files selected</small>';
            }
        });

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
    </script>
}